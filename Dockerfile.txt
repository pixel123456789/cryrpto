# MEXC Futures AI Trading Bot Dockerfile
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libgomp1 \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libfontconfig1 \
    libice6 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY pyproject.toml .
RUN pip install --no-cache-dir --upgrade pip setuptools wheel

# Install Python dependencies from pyproject.toml
RUN pip install --no-cache-dir \
    aiohttp>=3.12.13 \
    anthropic>=0.54.0 \
    apscheduler>=3.11.0 \
    keras>=3.10.0 \
    lightgbm>=4.6.0 \
    matplotlib>=3.10.3 \
    nltk>=3.9.1 \
    numpy>=2.3.0 \
    openai>=1.88.0 \
    opencv-python>=4.11.0.86 \
    pandas>=2.3.0 \
    pillow>=11.2.1 \
    plotly>=6.1.2 \
    psutil>=7.0.0 \
    python-telegram-bot==20.7 \
    scikit-learn>=1.7.0 \
    statsmodels>=0.14.4 \
    telegram>=0.0.1 \
    textblob>=0.19.0 \
    xgboost>=3.0.2

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p /app/data /app/logs

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

# Download NLTK data
RUN python -c "import nltk; nltk.download('punkt'); nltk.download('vader_lexicon'); nltk.download('stopwords')"

# Expose port (if needed for future web interface)
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import sqlite3; conn = sqlite3.connect('trading_bot.db'); conn.close()" || exit 1

# Set proper permissions
RUN chmod +x complete_mexc_bot.py

# Run the bot
CMD ["python", "complete_mexc_bot.py"]